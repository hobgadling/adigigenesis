World:
	The world is a torus, so every cell is actually surrounded by 8 other cells, even the border cells

Connections:
	The three high bits and the three low bits of each instruction can bind with the appropriate three bits of the surrounding instructions if the bits XOR to 1
		Triple bond if top 3 bits of one instructions XOR to 111 with low three bits of previous instruction - 8 Energy
		Double bond if top 2 bits of one instructions XOR to 11 with low two bits of previous instruction - 4 Energy
		Single bond if top bit of one instructions XORs to 1 with low bit of previous instruction - 2 Energy
	Nothing binds to 0x0000
	Connections are made to the most energetic bond first, and then clockwise around the cell if there are multiple connections at the same energy level
	The minimum instruction angle is 90 degrees
	If the low bits have a more energetic connection they will connect first, and vice-versa; if both low and high bits are trying to connect at the same energy level, the low bits of the instruction will connect first
	Possible connections to instruction at (x,y):
		Low bits:
			(x,y-1)
				Possible high bit connections:
					(x+1,y)
					(x+1,y+1)
					(x,y+1)
			(x-1,y-1)
				Possible high bit connections:
					(x+1,y-1)
					(x+1,y)
					(x+1,y+1)
					(x,y+1)
			(x-1,y)
				Possible high bit connections:
					(x,y-1)
					(x+1,y-1)
					(x+1,y)
					(x+1,y+1)
					(x,y+1)
			(x-1,y+1)
				Possible high bit connections:
					(x,y-1)
					(x+1,y-1)
					(x+1,y)
					(x+1,y+1)
			(x,y+1)
				Possible high bit connections:
					(x,y-1)
					(x+1,y-1)
					(x+1,y)
		High bits:
			(x,y-1)
				Possible low bit connections:
					(x,y+1)
					(x-1,y+1)
					(x-1,y)
			(x+1,y-1)
				Possible low bit connections:
					(x,y+1)
					(x-1,y+1)
					(x-1,y)
					(x-1,y-1)
			(x+1,y)
				Possible low bit connections:
					(x,y+1)
					(x-1,y+1)
					(x-1,y)
					(x-1,y-1)
					(x,y-1)
			(x+1,y+1)
				Possible low bit connections:
					(x-1,y+1)
					(x-1,y)
					(x-1,y-1)
					(x,y-1)
			(x,y+1)
				Possible low bit connections:
					(x-1,y)
					(x-1,y-1)
					(x,y-1)
					
Movement:
	Currents come about randomly (from "wind")
	Current in each cell can be in one of the 8 directions
	Movement happens at the end of each cycle
	In a cell with 0x0000, the current value just moves to the next cell in the appropritate direction
	In a cell with an instruction which is not connected to anything, that instruction moves in the direction of the current, pushes everything in that direction 1 cell that way, and is reduced by half in the new location plus the number of 1s in the instruction/4
	A set of connected cells is moved in the vector sum direction of all of the currents on it (no angular momentum)
	At the beginning of each cycle, the current in a cell is the vector sum of all of the currents acting on that cell

Energy:
	Energy will diffuse at the end of each cycle
	If one of the surrounding cells has less energy, the cell will lose one energy to the surrounding cell with the lowest energy
	If two cells are connected, and the energy of the two cells + (total current speed/2) is greater than the energy of the bond, and the cells would move apart if they werent connected based on the direction of the currents, the connection is broken, the energy that went into breaking the bond disappears and the cells are only moved with whatever current is left after the bond energy is subtracted
	If two cells connect, half of the energy of the connection goes into each of the cells that connect
	
Mutation:
	Every cell has a 0.001% chance of having a 1 bit flip each cycle
	On read, there is a 0.005% chance that 1 bit of the value that is being read will be flipped
	On write, there is a 0.01% chance that 1 bit of the value that is being written will be flipped
	
Cycles:
	There is only one CPU, so there is only one set of special registers
	On startup, the instruction at (0,0) is executed first
	The instructions are executed from (0,0) -> (x-max,0), and then from (x-max,0) -> (0,1)
	After (x-max,y-max), the PC loops back to (0,0)
	A cycle consists of x-max * y-max instructions executed
	Any instructions which access memory locations specified by immediates are NOPs